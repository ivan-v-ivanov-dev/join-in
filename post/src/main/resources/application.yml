server:
  port: 8082

spring:

  #Mongo
  data:
    mongodb:
      uri: mongodb://rootuser:rootpass@localhost:27020/storage
      database: storage

  #Kafka
  kafka:
    producer:
      bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      group-id: group_id
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      key:
        type:
          packages: '*'
      value:
        type:
          packages: com.social.kafka.messages.contract.KafkaMessage
    topic:
      name:
        post:
          publication: post-publication-topic
          comment: post-comment-topic
        delete:
          post: delete-post-topic
          nodes: delete-nodes-topic
        edit:
          post: edit-post-topic
        new:
          user: new-user-topic
          post:
            notification: new-post-notification
            node: new-post-node
          comment:
            notification: new-comment-notification
            node: new-comment-node
    partitions: 3
    replicas: 1
    group:
      id: group-id

#Exclude Kafka logging
logging:
  level:
    org.apache: OFF

#Feign Relationship service
relationship:
  service:
    url: http://localhost:8083
    feign:
      client:
        name: Relationship-Service
  find:
    profile:
      friends: /profile/friends

#Feign Reaction service
reaction:
  service:
    url: http://localhost:8084
    feign:
      client:
        name: Reaction-Service
  post:
    reactions:
      users:
        identities: /post/reactions/users

#Feign Image service
image:
  service:
    url: http://localhost:8085
    feign:
      client:
        name: Image-Service
  profile: /profile-image