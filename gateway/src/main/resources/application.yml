server:
  port: 8081
  max-http-header-size: 10MB

spring:
  #Kafka
  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      group-id: group_id
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      key:
        type:
          packages: '*'
      value:
        type:
          packages: com.social.kafka.messages.contract.KafkaMessage
    producer:
      bootstrap-servers: localhost:9092
    topic:
      name:
        registered:
          user: registered-user
        user:
          logout: user-logout
          login: user-login
        new:
          chat:
            message: new-chat-message
        post:
          publication: post-publication
    partitions: 3
    replicas: 1
    group:
      id: group-id

#Exclude Kafka logging
logging:
  level:
    org.apache: OFF

#Feign Login service
authentication:
  login:
    endpoint: /
  register:
    endpoint: /register
  service:
    feign:
      client:
        name: Login-Service
    url: http://localhost:8082

#Feign Profile service
profile:
  register:
    endpoint: /register
  identity:
    endpoint: /profile/{identity}
    names:
      endpoint: /profile/{identity}/names
  service:
    feign:
      client:
        name: Profile-Service
    url: http://localhost:8083

#Feign Image service
image:
  service:
    feign:
      client:
        name: Image-Service
    url: http://localhost:8089
  profile: /profile/{identity}
  background: /profile/{identity}/background-image
  albums: /profile/{identity}/album

#Feign Post service
post:
  author:
    endpoint: /author/{authorIdentity}/post/{postIdentity}
  service:
    feign:
      client:
        name: Post-Service
    url: http://localhost:8084
all:
  posts:
    author:
      endpoint: /author/{authorIdentity}/posts

#Feign Reaction service
reaction:
  find:
    post:
      likes:
        count: /post/{postIdentity}/likes
        user:
          identities: /post/{postIdentity}/likes/profile-identities
      dislikes:
        count: /post/{postIdentity}/dislikes
        user:
          identities: /post/{postIdentity}/dislikes/profile-identities
      stars:
        count: /post/{postIdentity}/stars
        user:
          identities: /post/{postIdentity}/stars/profile-identities
    comment:
      likes:
        count: /comment/{commentIdentity}/likes
      dislikes:
        count: /comment/{commentIdentity}/dislikes
  service:
    url: http://localhost:8085
    feign:
      client:
        name: Reaction-Service

#Feign Relationship service
relationship:
  find:
    user:
      friends: /profile/{identity}/friends
      friendship:
        requests: /profile/{identity}/friendship-requests
    friends:
      count: /profile/{identity}/friends/count
  service:
    feign:
      client:
        name: Relationship-Service
    url: http://localhost:8087

#Feign Notification service
notification:
  service:
    feign:
      client:
        name: Notification-Service
    url: http://localhost:8086
  find:
    profile:
      notifications: /profile/{identity}

#Feign Message service
message:
  service:
    feign:
      client:
        name: Message-Service
    url: http://localhost:8088
    friend:
      online:
        status: /profile/{identity}/online-status